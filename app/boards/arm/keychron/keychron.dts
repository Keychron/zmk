/*
 * Copyright (c) 2021 Nick Winans
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>

#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/matrix_transform.h>
#include <dt-bindings/zmk/ckled2001.h>

/ {
    model = "keychron";
    compatible = "keychron";

    chosen {
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zephyr,console = &uart0; //&cdc_acm_uart;
        zmk,battery = &vbatt;
        zmk,kscan = &kscan_comp;//&kscan0;
        zmk,matrix_transform = &default_transform;
        zmk,underglow = &led_strip;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <18>;
        rows = <8>;
        map = <
            //esc        //f1        //f2       //f3          //f4       //f5     //f6            //f7        //f8        //f9      //f10     //f11          //f12      //f13        //print     //scr       //pause
            RC(3,1)     RC(6,2)     RC(6,3)     RC(1,3)     RC(3,3)     RC(7,0)     RC(3,6)     RC(1,7)     RC(6,7)     RC(6,10)    RC(7,10)    RC(3,10)    RC(5,10)    RC(5,17)     RC(7,9)     RC(0,9)     RC(0,0)     RC(7,16)    RC(4,16)    RC(2,16)    RC(5,16)
             //grave      //1      //2            //3      //4            //5        //6         //7       //8            //9       //0        //-           //+=       //back       //ins       //home      //pg up     //num       // /        //*         // -
            RC(6,1)     RC(7,1)     RC(7,2)     RC(7,3)    RC(7,4)     RC(6,4)     RC(6,5)     RC(7,5)     RC(7,6)      RC(7,7)     RC(7,8)     RC(6,8)     RC(6,6)     RC(1,10)    RC(6,12)    RC(6,14)    RC(6,13)    RC(4,11)     RC(4,12)    RC(4,13)    RC(5,13)
            //tab        //q         //w        //e         //r         // t         //y        //u         //i          //o         //p         //[         //]         //\          //del        //end     //pg dn     //kp 7       //kp8      //kp 9       //kp +
            RC(1,1)     RC(0,1)     RC(0,2)     RC(0,3)    RC(0,4)      RC(1,4)     RC(1,5)     RC(0,5)     RC(0,6)     RC(0,7)     RC(0,8)     RC(1,8)     RC(1,6)     RC(2,10)    RC(6,11)    RC(7,14)    RC(7,13)    RC(0,11)    RC(0,12)     RC(0,13)   RC(0,14)
            //cap        //a         //s         //d        //f            //g      //h          //j        //k             //l      // ;        //' "                    //enter                                         //4        //5          //6
            RC(1,2)     RC(2,1)     RC(2,2)     RC(2,3)     RC(2,4)     RC(3,4)     RC(3,5)     RC(2,5)     RC(2,6)     RC(2,7)     RC(2,8)     RC(3,8)                 RC(4,10)                                         RC(1,11)    RC(1,12)     RC(1,13)   
             //lshit                 //z         //x         //c          //v         //b        //n         //m        //,<         //.>        //?/                    //rshit                  //up                   //1            //2         //3
            RC(1,15)                RC(4,1)     RC(4,2)     RC(4,3)     RC(4,4)     RC(5,4)     RC(5,5)     RC(4,5)     RC(4,6)     RC(4,7)     RC(5,8)                 RC(2,15)                RC(3,14)                RC(2,11)    RC(2,12)    RC(2,13)
            //lctrl     //win l      //alt l                                         //space                             //alt r    //win r                 //fn         //ctrl r     //left     //down      //right     //0                     //dot       //kp enter
            RC(6,0)     RC(1,16)    RC(3,9)                                         RC(3,11)                            RC(5,9)     RC(2,9)                RC(5,7)     RC(4,0)     RC(5,14)    RC(5,11)    RC(5,12)    RC(3,12)                RC(3,13)    RC(2,14)
            //m/w        //bt        //24g       //ch        //ch done   
            RC(8,0)     RC(8,1)     RC(8,2)     RC(8,3)     RC(8,4)
        >;
    };


    kscan0: kscan_matrix {
        compatible = "zmk,kscan-gpio-matrix";
        //label = "KSCAN";
        diode-direction = "col2row";
        debounce-scan-period-ms =<4>;
        debounce-press-ms =<8>;
        debounce-release-ms=<8>;
 
        row-gpios
            = <&gpio1 0 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>    //r0
            , <&gpio1 1 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>    //r1
            , <&gpio1 2 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>    //r2
            , <&gpio1 4 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>    //r3
            , <&gpio1 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>    //r4
            , <&gpio1 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>    //r5
            , <&gpio1 10 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   //r6
            , <&gpio1 12 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>   //r7
            ;
        col-gpios
            = <&gpio0 0 (GPIO_ACTIVE_HIGH )>   //c0
            , <&gpio0 1 (GPIO_ACTIVE_HIGH)>   //c1
            , <&gpio0 26 (GPIO_ACTIVE_HIGH)>  //c2
            , <&gpio0 27 (GPIO_ACTIVE_HIGH)>  //c3    
            , <&gpio0 4 (GPIO_ACTIVE_HIGH)>   //c4
            , <&gpio0 5  (GPIO_ACTIVE_HIGH)>  //c5
            , <&gpio0 6  (GPIO_ACTIVE_HIGH)>  //c6
            , <&gpio0 7  (GPIO_ACTIVE_HIGH)>  //c7
            , <&gpio0 8  (GPIO_ACTIVE_HIGH)>  //c8
            , <&gpio0 11  (GPIO_ACTIVE_HIGH)> //c9
            , <&gpio0 12  (GPIO_ACTIVE_HIGH)> //c10
            , <&gpio0 13  (GPIO_ACTIVE_HIGH)> //c11
            , <&gpio0 14  (GPIO_ACTIVE_HIGH)> //c12
            , <&gpio0 15  (GPIO_ACTIVE_HIGH)> //c13
            , <&gpio0 16  (GPIO_ACTIVE_HIGH)> //c14
            , <&gpio0 17  (GPIO_ACTIVE_HIGH)> //c15
            , <&gpio0 18  (GPIO_ACTIVE_HIGH)> //c16
            , <&gpio0 20  (GPIO_ACTIVE_HIGH)> //c17
            ;

    };

    kscan1:kscan_direct {
        compatible = "zmk,kscan-gpio-direct";
        //label = "CONTROL";
        input-gpios
        = <&gpio0 24 GPIO_ACTIVE_LOW> //mac/win
        , <&gpio1 8  (GPIO_ACTIVE_LOW)> //bt
        , <&gpio1 9  (GPIO_ACTIVE_LOW)> //24g
        , <&gpio0 21 GPIO_ACTIVE_LOW> //charging
        , <&gpio0 22 GPIO_ACTIVE_LOW> //charge done
        ;
    };

    kscan_comp: kscan {
        compatible = "zmk,kscan-composite";
        label = "KSCAN_ALL";
        rows = <9>;
        columns = <18>;

        // Include the matrix driver
        matrix {
            kscan = <&kscan0>;
        };

        // Include the direct GPIO driver...
        direct {
            kscan = <&kscan1>;
            row-offset = <8>; // ...and shift it to not overlap
        };
    };

    led_strip: led-strip-composite {
        compatible = "zmk,led-strip-composite";
        label = "LED_STRIP";
        chain-length = <67>;
        strip-0 {
            led-strip = <&led_strip_0>;
        };
        strip-1 {
            led-strip = <&led_strip_1>;
        };
    };
    

    ext-power {
        compatible = "zmk,ext-power-generic";
        status ="disabled";
        label = "EXT_POWER";
        control-gpios = <&gpio0 5 GPIO_ACTIVE_LOW>;
    };

    vbatt: vbatt {
        compatible = "zmk,battery-voltage-divider";
        //label = "BATTERY";
        io-channels = <&adc 7>;
        output-ohms = <510000>;
        full-ohms = <(510000 + 510000)>;
    };

    led_blue {
        compatible = "gpio-leds";
        label = "LED_BLUE";
        blue_led: led_01 {
            gpios = <&gpio1 14 GPIO_ACTIVE_LOW>;
           
        };
    };
    led_numlock {
        compatible = "gpio-leds";
        label = "LED_NumLock";
        status = "okay";
        numlock_led: led_02 {
                gpios = <&gpio0 9 GPIO_ACTIVE_LOW>;

        };
    };
    led_CAPS {
        compatible = "gpio-leds";
        label = "LED_CAPS";
        status = "okay";
        caps_led: led_03 {
                gpios = <&gpio0 10 GPIO_ACTIVE_LOW>;

        };
    };
    led_24G {
        compatible = "gpio-leds";
        label = "LED_24G";
        status = "okay";
        led_24g: led_04 {
                gpios = <&gpio0 3 GPIO_ACTIVE_LOW>;

        };
    };
    led_rgb {
        compatible = "gpio-leds";
        label = "LED_RGB";
        status = "okay";

        myled_r: led_r {
                gpios = <&gpio0 28 GPIO_ACTIVE_LOW>;
                label = "led_r";
        };
        myled_g: led_g {
                gpios = <&gpio0 30 GPIO_ACTIVE_LOW>;
                label = "led_g";
        };
        myled_b: led_b {
                gpios = <&gpio0 29 GPIO_ACTIVE_LOW>;
                label = "led_b";
        };
    };
};

&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

&pinctrl {
    i2c0_default:i2c0_default{
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 26)>,
                <NRF_PSEL(TWIM_SCL, 0, 27)>;
        };
    };
    i2c0_sleep:i2c0_sleep {
        group1 {
            psels = <NRF_PSEL(TWIM_SDA, 0, 26)>,
                <NRF_PSEL(TWIM_SCL, 0, 27)>;
            low-power-enable;
        };
    };

    uart0_default:uart0_default {
        group1 {
            psels = <NRF_PSEL(UART_TX, 1, 13)>;
            low-power-enable;
        };

        group2 {
            psels = <NRF_PSEL(UART_RX, 1, 15)>;
            low-power-enable;
        };
    };
    uart0_sleep:uart0_sleep {
        group1 {
            psels = <NRF_PSEL(UART_TX, 1, 13)>;
            low-power-enable;
        };

        group2 {
            psels = <NRF_PSEL(UART_RX, 1, 15)>;
            low-power-enable;
        };
    };

};



ckled:&i2c0 {
    // compatible = "nordic,nrf-twi";
    pinctrl-0 = <&i2c0_default>;
    pinctrl-names = "default";
    status = "disabled";

    // pinctrl-0 = <&i2c0_default>;
    // pinctrl-1 = <&i2c0_sleep>;
    // pinctrl-names = "default", "sleep";

    // clock-frequency = <DT_FREQ_K(400)>;

    led_strip_0: ckled2001@77 {
        compatible = "zmk,ckled2001";
        //label = "LED_STRIP_0";
        /* ADDR/CS pin connected to VDDIO */
        /* Located closer to the USB daughterboard connection */
        reg = <0x77>;
        chain-length = <34>;
        map = <
        /* ROW 0 */
        /*   R        G        B */
        CK(2, 0) CK(0, 0) CK(1, 0)
        CK(2, 1) CK(0, 1) CK(1, 1)
        CK(2, 2) CK(0, 2) CK(1, 2)
        CK(2, 3) CK(0, 3) CK(1, 3)
        CK(2, 4) CK(0, 4) CK(1, 4)
        CK(2, 5) CK(0, 5) CK(1, 5)
        CK(2, 6) CK(0, 6) CK(1, 6)
        CK(2, 7) CK(0, 7) CK(1, 7)
        CK(2, 8) CK(0, 8) CK(1, 8)
        CK(2, 9) CK(0, 9) CK(1, 9)
        CK(2,10) CK(0,10) CK(1,10)
        CK(2,11) CK(0,11) CK(1,11)
        CK(2,12) CK(0,12) CK(1,12)
        CK(2,13) CK(0,13) CK(1,13)
        CK(2,15) CK(0,15) CK(1,15)
        /* ROW 1 */
        /*   R        G        B */
        CK(8, 0) CK(6, 0) CK(7, 0)
        CK(8, 1) CK(6, 1) CK(7, 1)
        CK(8, 2) CK(6, 2) CK(7, 2)
        CK(8, 3) CK(6, 3) CK(7, 3)
        /* ROW 2 */
        /*   R        G        B */
        CK(5, 0) CK(3, 0) CK(4, 0)
        CK(5, 1) CK(3, 1) CK(4, 1)
        CK(5, 2) CK(3, 2) CK(4, 2)
        CK(5, 3) CK(3, 3) CK(4, 3)
        CK(5, 4) CK(3, 4) CK(4, 4)
        CK(5, 5) CK(3, 5) CK(4, 5)
        CK(5, 6) CK(3, 6) CK(4, 6)
        CK(5, 7) CK(3, 7) CK(4, 7)
        CK(5, 8) CK(3, 8) CK(4, 8)
        CK(5, 9) CK(3, 9) CK(4, 9)
        CK(5,10) CK(3,10) CK(4,10)
        CK(5,11) CK(3,11) CK(4,11)
        CK(5,12) CK(3,12) CK(4,12)
        CK(5,13) CK(3,13) CK(4,13)
        CK(5,15) CK(3,15) CK(4,15)
        >;
    };

    led_strip_1: ckled2001@74 {
        compatible = "zmk,ckled2001";
        //label = "LED_STRIP_1";
        /* ADDR/CS pin connected to GND */
        /* Located closer to the space bar */
        reg = <0x74>;
        chain-length = <33>;
        map = <
        /* ROW 3 */
        /*   R        G        B */
        CK(8, 4) CK(6, 4) CK(7, 4)
        CK(8, 5) CK(6, 5) CK(7, 5)
        CK(8, 6) CK(6, 6) CK(7, 6)
        CK(8, 7) CK(6, 7) CK(7, 7)
        CK(8, 8) CK(6, 8) CK(7, 8)
        CK(8, 9) CK(6, 9) CK(7, 9)
        CK(8,10) CK(6,10) CK(7,10)
        CK(8,11) CK(6,11) CK(7,11)
        CK(8,13) CK(6,13) CK(7,13)
        CK(8,15) CK(6,15) CK(7,15)
        /* ROW 4 */
        /*   R        G        B */
        CK(5, 0) CK(3, 0) CK(4, 0)
        CK(5, 1) CK(3, 1) CK(4, 1)
        CK(5, 2) CK(3, 2) CK(4, 2)
        CK(5, 6) CK(3, 6) CK(4, 6)
        CK(5,10) CK(3,10) CK(4,10)
        CK(5,11) CK(3,11) CK(4,11)
        CK(5,12) CK(3,12) CK(4,12)
        CK(5,13) CK(3,13) CK(4,13)
        CK(5,14) CK(3,14) CK(4,14)
        CK(5,15) CK(3,15) CK(4,15)
        /* ROW 5 */
        /*   R        G        B */
        CK(2, 0) CK(0, 0) CK(1, 0)
        CK(2, 2) CK(0, 2) CK(1, 2)
        CK(2, 3) CK(0, 3) CK(1, 3)
        CK(2, 4) CK(0, 4) CK(1, 4)
        CK(2, 5) CK(0, 5) CK(1, 5)
        CK(2, 6) CK(0, 6) CK(1, 6)
        CK(2, 7) CK(0, 7) CK(1, 7)
        CK(2, 8) CK(0, 8) CK(1, 8)
        CK(2, 9) CK(0, 9) CK(1, 9)
        CK(2,10) CK(0,10) CK(1,10)
        CK(2,11) CK(0,11) CK(1,11)
        CK(2,13) CK(0,13) CK(1,13)
        CK(2,14) CK(0,14) CK(1,14)
        >;
    };
};


&usbd {
    status = "okay";
    //cdc_acm_uart: cdc_acm_uart {
    //   compatible = "zephyr,cdc-acm-uart";
    //    label = "CDC_ACM_0";
    //};
};


&uart0 {
    compatible = "nordic,nrf-uarte";
    status = "disabled";//"okay";//
    current-speed = <1000000>;
    pinctrl-0 = <&uart0_default>;
    pinctrl-1 = <&uart0_sleep>;
    pinctrl-names = "default", "sleep";
};


&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            label = "mbr";
            reg = <0x00000000 0x00001000>;
        };

        code_partition: partition@1000 {
            label = "code_partition";
            reg = <0x00001000 0x000d3000>;
        };

        /*
         * The flash starting at 0x000d4000 and ending at
         * 0x000f3fff is reserved for use by the application.
         */

        /*
         * Storage partition will be used by FCB/LittleFS/NVS
         * if enabled.
         */
        storage_partition: partition@d4000 {
            label = "storage";
            reg = <0x000d4000 0x00020000>;
        };

        boot_partition: partition@f4000 {
            label = "adafruit_boot";
            reg = <0x000f4000 0x0000c000>;
        };
    };
};
#include <behaviors.dtsi>
&mt {
    tapping-term-ms = <400>;
};
